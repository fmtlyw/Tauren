apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.versions.compileSdkVersion
    buildToolsVersion rootProject.ext.versions.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.versions.applicationId
        minSdkVersion rootProject.ext.versions.minSdkVersion
        targetSdkVersion rootProject.ext.versions.targetSdkVersion
        versionCode rootProject.ext.versions.versionCode
        versionName rootProject.ext.versions.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    //使用Kotlin实验特性（不加实体数据类会报“X类不是抽象的，并且没有实现android.os.Parcelable中定义的有趣的writeToParcel（）(Class X is not abstract and does not implement fun writeToParcel() defined in android.os.Parcelable)”异常）
    androidExtensions {
        experimental = true
    }

    //要加，不然使用okhttp会报异常
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    //公用依赖包
    implementation project(':module_common_base')
    if (!Boolean.valueOf(rootProject.ext.isModule)) {
        //main模块
//        implementation project(':module_main')
//        implementation project(':module_market')
//        implementation project(':module_wan_android')
    }
}
